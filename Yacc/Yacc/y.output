Nonterminals useless in grammar

   boolop


Terminals unused in grammar

   T_int
   T_real


Rules useless in grammar

   47 boolop: '<'
   48       | '>'
   49       | LEE
   50       | LAE
   51       | EQ


State 2 conflicts: 1 shift/reduce
State 5 conflicts: 5 shift/reduce, 1 reduce/reduce
State 9 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 23 conflicts: 5 shift/reduce, 2 reduce/reduce
State 29 conflicts: 4 shift/reduce, 9 reduce/reduce
State 37 conflicts: 2 shift/reduce, 6 reduce/reduce
State 42 conflicts: 1 shift/reduce
State 43 conflicts: 2 shift/reduce, 2 reduce/reduce
State 66 conflicts: 2 shift/reduce
State 68 conflicts: 2 shift/reduce
State 98 conflicts: 1 reduce/reduce
State 99 conflicts: 1 reduce/reduce
State 100 conflicts: 3 reduce/reduce
State 101 conflicts: 3 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: compoundstmt

    2 stmt: ifstmt
    3     | whilestmt
    4     | assgstmt
    5     | assgstmt error
    6     | compoundstmt
    7     | error

    8 compoundstmt: '{' stmts '}'
    9             | '{' stmts error
   10             | error stmts '}'

   11 stmts: stmt stmts
   12      | stmt error stmts
   13      | /* empty */

   14 ifstmt: T_if '(' boolexpr ')' stmt T_then stmt T_else stmt
   15       | T_if error '(' boolexpr ')' stmt T_then stmt T_else stmt

   16 whilestmt: T_while '(' boolexpr ')' stmt
   17          | T_while error '(' boolexpr ')' stmt

   18 assgstmt: ID '=' arithexpr ';'
   19         | ID '=' arithexpr
   20         | ID '=' error arithexpr ';'
   21         | ID error

   22 boolexpr: arithexpr '<' arithexpr
   23         | arithexpr '>' arithexpr
   24         | arithexpr LEE arithexpr
   25         | arithexpr LAE arithexpr
   26         | arithexpr EQ arithexpr
   27         | arithexpr NE arithexpr
   28         | error

   29 arithexpr: multexpr arithexprprime
   30          | error arithexprprime

   31 arithexprprime: '+' multexpr arithexprprime
   32               | '+' error simpleexpr multexprprime
   33               | '-' multexpr arithexprprime
   34               | '-' error simpleexpr multexprprime
   35               | /* empty */

   36 multexpr: simpleexpr multexprprime
   37         | error multexprprime

   38 multexprprime: '*' simpleexpr multexprprime
   39              | '*' error simpleexpr multexprprime
   40              | '/' simpleexpr multexprprime
   41              | '/' error simpleexpr multexprprime
   42              | /* empty */

   43 simpleexpr: ID
   44           | NUM
   45           | '(' arithexpr ')'
   46           | error arithexpr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 15 16 17 45
')' (41) 14 15 16 17 45 46
'*' (42) 38 39
'+' (43) 31 32
'-' (45) 33 34
'/' (47) 40 41
';' (59) 18 20
'<' (60) 22
'=' (61) 18 19 20
'>' (62) 23
'{' (123) 8 9
'}' (125) 8 10
error (256) 5 7 9 10 12 15 17 20 21 28 30 32 34 37 39 41 46
NUM (258) 44
ID (259) 18 19 20 21 43
T_int (260)
T_if (261) 14 15
T_else (262) 14 15
T_while (263) 16 17
T_real (264)
T_then (265) 14 15
EQ (266) 26
LEE (267) 24
LAE (268) 25
NE (269) 27


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
stmt (29)
    on left: 2 3 4 5 6 7, on right: 11 12 14 15 16 17
compoundstmt (30)
    on left: 8 9 10, on right: 1 6
stmts (31)
    on left: 11 12 13, on right: 8 9 10 11 12
ifstmt (32)
    on left: 14 15, on right: 2
whilestmt (33)
    on left: 16 17, on right: 3
assgstmt (34)
    on left: 18 19 20 21, on right: 4 5
boolexpr (35)
    on left: 22 23 24 25 26 27 28, on right: 14 15 16 17
arithexpr (36)
    on left: 29 30, on right: 18 19 20 22 23 24 25 26 27 45 46
arithexprprime (37)
    on left: 31 32 33 34 35, on right: 29 30 31 33
multexpr (38)
    on left: 36 37, on right: 29 31 33
multexprprime (39)
    on left: 38 39 40 41 42, on right: 32 34 36 37 38 39 40 41
simpleexpr (40)
    on left: 43 44 45 46, on right: 32 34 36 38 39 40 41


state 0

    0 $accept: . program $end

    error  shift, and go to state 1
    '{'    shift, and go to state 2

    program       go to state 3
    compoundstmt  go to state 4


state 1

   10 compoundstmt: error . stmts '}'

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    '}'  reduce using rule 13 (stmts)

    stmt          go to state 9
    compoundstmt  go to state 10
    stmts         go to state 11
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 2

    8 compoundstmt: '{' . stmts '}'
    9             | '{' . stmts error

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    error  [reduce using rule 13 (stmts)]
    '}'    reduce using rule 13 (stmts)

    stmt          go to state 9
    compoundstmt  go to state 10
    stmts         go to state 15
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 3

    0 $accept: program . $end

    $end  shift, and go to state 16


state 4

    1 program: compoundstmt .

    $default  reduce using rule 1 (program)


state 5

    7 stmt: error .
   10 compoundstmt: error . stmts '}'

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    error    [reduce using rule 7 (stmt)]
    ID       [reduce using rule 7 (stmt)]
    T_if     [reduce using rule 7 (stmt)]
    T_else   reduce using rule 7 (stmt)
    T_while  [reduce using rule 7 (stmt)]
    T_then   reduce using rule 7 (stmt)
    '{'      [reduce using rule 7 (stmt)]
    '}'      reduce using rule 7 (stmt)
    '}'      [reduce using rule 13 (stmts)]

    stmt          go to state 9
    compoundstmt  go to state 10
    stmts         go to state 11
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 6

   18 assgstmt: ID . '=' arithexpr ';'
   19         | ID . '=' arithexpr
   20         | ID . '=' error arithexpr ';'
   21         | ID . error

    error  shift, and go to state 17
    '='    shift, and go to state 18


state 7

   14 ifstmt: T_if . '(' boolexpr ')' stmt T_then stmt T_else stmt
   15       | T_if . error '(' boolexpr ')' stmt T_then stmt T_else stmt

    error  shift, and go to state 19
    '('    shift, and go to state 20


state 8

   16 whilestmt: T_while . '(' boolexpr ')' stmt
   17          | T_while . error '(' boolexpr ')' stmt

    error  shift, and go to state 21
    '('    shift, and go to state 22


state 9

   11 stmts: stmt . stmts
   12      | stmt . error stmts

    error    shift, and go to state 23
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    error  [reduce using rule 13 (stmts)]
    '}'    reduce using rule 13 (stmts)

    stmt          go to state 9
    compoundstmt  go to state 10
    stmts         go to state 24
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 10

    6 stmt: compoundstmt .

    $default  reduce using rule 6 (stmt)


state 11

   10 compoundstmt: error stmts . '}'

    '}'  shift, and go to state 25


state 12

    2 stmt: ifstmt .

    $default  reduce using rule 2 (stmt)


state 13

    3 stmt: whilestmt .

    $default  reduce using rule 3 (stmt)


state 14

    4 stmt: assgstmt .
    5     | assgstmt . error

    error  shift, and go to state 26

    error    [reduce using rule 4 (stmt)]
    ID       reduce using rule 4 (stmt)
    T_if     reduce using rule 4 (stmt)
    T_else   reduce using rule 4 (stmt)
    T_while  reduce using rule 4 (stmt)
    T_then   reduce using rule 4 (stmt)
    '{'      reduce using rule 4 (stmt)
    '}'      reduce using rule 4 (stmt)


state 15

    8 compoundstmt: '{' stmts . '}'
    9             | '{' stmts . error

    error  shift, and go to state 27
    '}'    shift, and go to state 28


state 16

    0 $accept: program $end .

    $default  accept


state 17

   21 assgstmt: ID error .

    $default  reduce using rule 21 (assgstmt)


state 18

   18 assgstmt: ID '=' . arithexpr ';'
   19         | ID '=' . arithexpr
   20         | ID '=' . error arithexpr ';'

    error  shift, and go to state 29
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 33
    multexpr    go to state 34
    simpleexpr  go to state 35


state 19

   15 ifstmt: T_if error . '(' boolexpr ')' stmt T_then stmt T_else stmt

    '('  shift, and go to state 36


state 20

   14 ifstmt: T_if '(' . boolexpr ')' stmt T_then stmt T_else stmt

    error  shift, and go to state 37
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    boolexpr    go to state 38
    arithexpr   go to state 39
    multexpr    go to state 34
    simpleexpr  go to state 35


state 21

   17 whilestmt: T_while error . '(' boolexpr ')' stmt

    '('  shift, and go to state 40


state 22

   16 whilestmt: T_while '(' . boolexpr ')' stmt

    error  shift, and go to state 37
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    boolexpr    go to state 41
    arithexpr   go to state 39
    multexpr    go to state 34
    simpleexpr  go to state 35


state 23

    7 stmt: error .
   10 compoundstmt: error . stmts '}'
   12 stmts: stmt error . stmts

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    error    [reduce using rule 7 (stmt)]
    error    [reduce using rule 13 (stmts)]
    ID       [reduce using rule 7 (stmt)]
    T_if     [reduce using rule 7 (stmt)]
    T_while  [reduce using rule 7 (stmt)]
    '{'      [reduce using rule 7 (stmt)]
    '}'      reduce using rule 7 (stmt)
    '}'      [reduce using rule 13 (stmts)]

    stmt          go to state 9
    compoundstmt  go to state 10
    stmts         go to state 42
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 24

   11 stmts: stmt stmts .

    $default  reduce using rule 11 (stmts)


state 25

   10 compoundstmt: error stmts '}' .

    $default  reduce using rule 10 (compoundstmt)


state 26

    5 stmt: assgstmt error .

    $default  reduce using rule 5 (stmt)


state 27

    9 compoundstmt: '{' stmts error .

    $default  reduce using rule 9 (compoundstmt)


state 28

    8 compoundstmt: '{' stmts '}' .

    $default  reduce using rule 8 (compoundstmt)


state 29

   20 assgstmt: ID '=' error . arithexpr ';'
   30 arithexpr: error . arithexprprime
   37 multexpr: error . multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32
    '+'    shift, and go to state 44
    '-'    shift, and go to state 45
    '*'    shift, and go to state 46
    '/'    shift, and go to state 47

    error    [reduce using rule 35 (arithexprprime)]
    error    [reduce using rule 42 (multexprprime)]
    ID       [reduce using rule 35 (arithexprprime)]
    ID       [reduce using rule 42 (multexprprime)]
    T_if     reduce using rule 35 (arithexprprime)
    T_if     [reduce using rule 42 (multexprprime)]
    T_else   reduce using rule 35 (arithexprprime)
    T_else   [reduce using rule 42 (multexprprime)]
    T_while  reduce using rule 35 (arithexprprime)
    T_while  [reduce using rule 42 (multexprprime)]
    T_then   reduce using rule 35 (arithexprprime)
    T_then   [reduce using rule 42 (multexprprime)]
    '{'      reduce using rule 35 (arithexprprime)
    '{'      [reduce using rule 42 (multexprprime)]
    '}'      reduce using rule 35 (arithexprprime)
    '}'      [reduce using rule 42 (multexprprime)]
    ';'      reduce using rule 35 (arithexprprime)
    ';'      [reduce using rule 42 (multexprprime)]
    '+'      [reduce using rule 42 (multexprprime)]
    '-'      [reduce using rule 42 (multexprprime)]

    arithexpr       go to state 48
    arithexprprime  go to state 49
    multexpr        go to state 34
    multexprprime   go to state 50
    simpleexpr      go to state 35


state 30

   44 simpleexpr: NUM .

    $default  reduce using rule 44 (simpleexpr)


state 31

   43 simpleexpr: ID .

    $default  reduce using rule 43 (simpleexpr)


state 32

   45 simpleexpr: '(' . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 51
    multexpr    go to state 34
    simpleexpr  go to state 35


state 33

   18 assgstmt: ID '=' arithexpr . ';'
   19         | ID '=' arithexpr .

    ';'  shift, and go to state 52

    $default  reduce using rule 19 (assgstmt)


state 34

   29 arithexpr: multexpr . arithexprprime

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45

    $default  reduce using rule 35 (arithexprprime)

    arithexprprime  go to state 53


state 35

   36 multexpr: simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 54


state 36

   15 ifstmt: T_if error '(' . boolexpr ')' stmt T_then stmt T_else stmt

    error  shift, and go to state 37
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    boolexpr    go to state 55
    arithexpr   go to state 39
    multexpr    go to state 34
    simpleexpr  go to state 35


state 37

   28 boolexpr: error .
   30 arithexpr: error . arithexprprime
   37 multexpr: error . multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32
    '+'    shift, and go to state 44
    '-'    shift, and go to state 45
    '*'    shift, and go to state 46
    '/'    shift, and go to state 47

    EQ   reduce using rule 35 (arithexprprime)
    EQ   [reduce using rule 42 (multexprprime)]
    LEE  reduce using rule 35 (arithexprprime)
    LEE  [reduce using rule 42 (multexprprime)]
    LAE  reduce using rule 35 (arithexprprime)
    LAE  [reduce using rule 42 (multexprprime)]
    NE   reduce using rule 35 (arithexprprime)
    NE   [reduce using rule 42 (multexprprime)]
    ')'  reduce using rule 28 (boolexpr)
    '<'  reduce using rule 35 (arithexprprime)
    '<'  [reduce using rule 42 (multexprprime)]
    '>'  reduce using rule 35 (arithexprprime)
    '>'  [reduce using rule 42 (multexprprime)]
    '+'  [reduce using rule 42 (multexprprime)]
    '-'  [reduce using rule 42 (multexprprime)]

    arithexpr       go to state 56
    arithexprprime  go to state 49
    multexpr        go to state 34
    multexprprime   go to state 50
    simpleexpr      go to state 35


state 38

   14 ifstmt: T_if '(' boolexpr . ')' stmt T_then stmt T_else stmt

    ')'  shift, and go to state 57


state 39

   22 boolexpr: arithexpr . '<' arithexpr
   23         | arithexpr . '>' arithexpr
   24         | arithexpr . LEE arithexpr
   25         | arithexpr . LAE arithexpr
   26         | arithexpr . EQ arithexpr
   27         | arithexpr . NE arithexpr

    EQ   shift, and go to state 58
    LEE  shift, and go to state 59
    LAE  shift, and go to state 60
    NE   shift, and go to state 61
    '<'  shift, and go to state 62
    '>'  shift, and go to state 63


state 40

   17 whilestmt: T_while error '(' . boolexpr ')' stmt

    error  shift, and go to state 37
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    boolexpr    go to state 64
    arithexpr   go to state 39
    multexpr    go to state 34
    simpleexpr  go to state 35


state 41

   16 whilestmt: T_while '(' boolexpr . ')' stmt

    ')'  shift, and go to state 65


state 42

   10 compoundstmt: error stmts . '}'
   12 stmts: stmt error stmts .

    '}'  shift, and go to state 25

    '}'       [reduce using rule 12 (stmts)]
    $default  reduce using rule 12 (stmts)


state 43

   30 arithexpr: error . arithexprprime
   37 multexpr: error . multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32
    '+'    shift, and go to state 44
    '-'    shift, and go to state 45
    '*'    shift, and go to state 46
    '/'    shift, and go to state 47

    ')'  reduce using rule 35 (arithexprprime)
    ')'  [reduce using rule 42 (multexprprime)]
    ';'  reduce using rule 35 (arithexprprime)
    ';'  [reduce using rule 42 (multexprprime)]
    '+'  [reduce using rule 42 (multexprprime)]
    '-'  [reduce using rule 42 (multexprprime)]

    arithexpr       go to state 56
    arithexprprime  go to state 49
    multexpr        go to state 34
    multexprprime   go to state 50
    simpleexpr      go to state 35


state 44

   31 arithexprprime: '+' . multexpr arithexprprime
   32               | '+' . error simpleexpr multexprprime

    error  shift, and go to state 66
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    multexpr    go to state 67
    simpleexpr  go to state 35


state 45

   33 arithexprprime: '-' . multexpr arithexprprime
   34               | '-' . error simpleexpr multexprprime

    error  shift, and go to state 68
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    multexpr    go to state 69
    simpleexpr  go to state 35


state 46

   38 multexprprime: '*' . simpleexpr multexprprime
   39              | '*' . error simpleexpr multexprprime

    error  shift, and go to state 70
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    simpleexpr  go to state 71


state 47

   40 multexprprime: '/' . simpleexpr multexprprime
   41              | '/' . error simpleexpr multexprprime

    error  shift, and go to state 72
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    simpleexpr  go to state 73


state 48

   20 assgstmt: ID '=' error arithexpr . ';'
   46 simpleexpr: error arithexpr . ')'

    ')'  shift, and go to state 74
    ';'  shift, and go to state 75


state 49

   30 arithexpr: error arithexprprime .

    $default  reduce using rule 30 (arithexpr)


state 50

   37 multexpr: error multexprprime .

    $default  reduce using rule 37 (multexpr)


state 51

   45 simpleexpr: '(' arithexpr . ')'

    ')'  shift, and go to state 76


state 52

   18 assgstmt: ID '=' arithexpr ';' .

    $default  reduce using rule 18 (assgstmt)


state 53

   29 arithexpr: multexpr arithexprprime .

    $default  reduce using rule 29 (arithexpr)


state 54

   36 multexpr: simpleexpr multexprprime .

    $default  reduce using rule 36 (multexpr)


state 55

   15 ifstmt: T_if error '(' boolexpr . ')' stmt T_then stmt T_else stmt

    ')'  shift, and go to state 77


state 56

   46 simpleexpr: error arithexpr . ')'

    ')'  shift, and go to state 74


state 57

   14 ifstmt: T_if '(' boolexpr ')' . stmt T_then stmt T_else stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 78
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 58

   26 boolexpr: arithexpr EQ . arithexpr

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 79
    multexpr    go to state 34
    simpleexpr  go to state 35


state 59

   24 boolexpr: arithexpr LEE . arithexpr

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 80
    multexpr    go to state 34
    simpleexpr  go to state 35


state 60

   25 boolexpr: arithexpr LAE . arithexpr

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 81
    multexpr    go to state 34
    simpleexpr  go to state 35


state 61

   27 boolexpr: arithexpr NE . arithexpr

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 82
    multexpr    go to state 34
    simpleexpr  go to state 35


state 62

   22 boolexpr: arithexpr '<' . arithexpr

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 83
    multexpr    go to state 34
    simpleexpr  go to state 35


state 63

   23 boolexpr: arithexpr '>' . arithexpr

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 84
    multexpr    go to state 34
    simpleexpr  go to state 35


state 64

   17 whilestmt: T_while error '(' boolexpr . ')' stmt

    ')'  shift, and go to state 85


state 65

   16 whilestmt: T_while '(' boolexpr ')' . stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 86
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 66

   32 arithexprprime: '+' error . simpleexpr multexprprime
   37 multexpr: error . multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32
    '*'    shift, and go to state 46
    '/'    shift, and go to state 47

    error    [reduce using rule 42 (multexprprime)]
    ID       [reduce using rule 42 (multexprprime)]
    T_if     reduce using rule 42 (multexprprime)
    T_else   reduce using rule 42 (multexprprime)
    T_while  reduce using rule 42 (multexprprime)
    T_then   reduce using rule 42 (multexprprime)
    EQ       reduce using rule 42 (multexprprime)
    LEE      reduce using rule 42 (multexprprime)
    LAE      reduce using rule 42 (multexprprime)
    NE       reduce using rule 42 (multexprprime)
    '{'      reduce using rule 42 (multexprprime)
    '}'      reduce using rule 42 (multexprprime)
    ')'      reduce using rule 42 (multexprprime)
    ';'      reduce using rule 42 (multexprprime)
    '<'      reduce using rule 42 (multexprprime)
    '>'      reduce using rule 42 (multexprprime)
    '+'      reduce using rule 42 (multexprprime)
    '-'      reduce using rule 42 (multexprprime)

    arithexpr      go to state 56
    multexpr       go to state 34
    multexprprime  go to state 50
    simpleexpr     go to state 87


state 67

   31 arithexprprime: '+' multexpr . arithexprprime

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45

    $default  reduce using rule 35 (arithexprprime)

    arithexprprime  go to state 88


state 68

   34 arithexprprime: '-' error . simpleexpr multexprprime
   37 multexpr: error . multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32
    '*'    shift, and go to state 46
    '/'    shift, and go to state 47

    error    [reduce using rule 42 (multexprprime)]
    ID       [reduce using rule 42 (multexprprime)]
    T_if     reduce using rule 42 (multexprprime)
    T_else   reduce using rule 42 (multexprprime)
    T_while  reduce using rule 42 (multexprprime)
    T_then   reduce using rule 42 (multexprprime)
    EQ       reduce using rule 42 (multexprprime)
    LEE      reduce using rule 42 (multexprprime)
    LAE      reduce using rule 42 (multexprprime)
    NE       reduce using rule 42 (multexprprime)
    '{'      reduce using rule 42 (multexprprime)
    '}'      reduce using rule 42 (multexprprime)
    ')'      reduce using rule 42 (multexprprime)
    ';'      reduce using rule 42 (multexprprime)
    '<'      reduce using rule 42 (multexprprime)
    '>'      reduce using rule 42 (multexprprime)
    '+'      reduce using rule 42 (multexprprime)
    '-'      reduce using rule 42 (multexprprime)

    arithexpr      go to state 56
    multexpr       go to state 34
    multexprprime  go to state 50
    simpleexpr     go to state 89


state 69

   33 arithexprprime: '-' multexpr . arithexprprime

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45

    $default  reduce using rule 35 (arithexprprime)

    arithexprprime  go to state 90


state 70

   39 multexprprime: '*' error . simpleexpr multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 56
    multexpr    go to state 34
    simpleexpr  go to state 91


state 71

   38 multexprprime: '*' simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 92


state 72

   41 multexprprime: '/' error . simpleexpr multexprprime
   46 simpleexpr: error . arithexpr ')'

    error  shift, and go to state 43
    NUM    shift, and go to state 30
    ID     shift, and go to state 31
    '('    shift, and go to state 32

    arithexpr   go to state 56
    multexpr    go to state 34
    simpleexpr  go to state 93


state 73

   40 multexprprime: '/' simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 94


state 74

   46 simpleexpr: error arithexpr ')' .

    $default  reduce using rule 46 (simpleexpr)


state 75

   20 assgstmt: ID '=' error arithexpr ';' .

    $default  reduce using rule 20 (assgstmt)


state 76

   45 simpleexpr: '(' arithexpr ')' .

    $default  reduce using rule 45 (simpleexpr)


state 77

   15 ifstmt: T_if error '(' boolexpr ')' . stmt T_then stmt T_else stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 95
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 78

   14 ifstmt: T_if '(' boolexpr ')' stmt . T_then stmt T_else stmt

    T_then  shift, and go to state 96


state 79

   26 boolexpr: arithexpr EQ arithexpr .

    $default  reduce using rule 26 (boolexpr)


state 80

   24 boolexpr: arithexpr LEE arithexpr .

    $default  reduce using rule 24 (boolexpr)


state 81

   25 boolexpr: arithexpr LAE arithexpr .

    $default  reduce using rule 25 (boolexpr)


state 82

   27 boolexpr: arithexpr NE arithexpr .

    $default  reduce using rule 27 (boolexpr)


state 83

   22 boolexpr: arithexpr '<' arithexpr .

    $default  reduce using rule 22 (boolexpr)


state 84

   23 boolexpr: arithexpr '>' arithexpr .

    $default  reduce using rule 23 (boolexpr)


state 85

   17 whilestmt: T_while error '(' boolexpr ')' . stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 97
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 86

   16 whilestmt: T_while '(' boolexpr ')' stmt .

    $default  reduce using rule 16 (whilestmt)


state 87

   32 arithexprprime: '+' error simpleexpr . multexprprime
   36 multexpr: simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 98


state 88

   31 arithexprprime: '+' multexpr arithexprprime .

    $default  reduce using rule 31 (arithexprprime)


state 89

   34 arithexprprime: '-' error simpleexpr . multexprprime
   36 multexpr: simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 99


state 90

   33 arithexprprime: '-' multexpr arithexprprime .

    $default  reduce using rule 33 (arithexprprime)


state 91

   36 multexpr: simpleexpr . multexprprime
   39 multexprprime: '*' error simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 100


state 92

   38 multexprprime: '*' simpleexpr multexprprime .

    $default  reduce using rule 38 (multexprprime)


state 93

   36 multexpr: simpleexpr . multexprprime
   41 multexprprime: '/' error simpleexpr . multexprprime

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 42 (multexprprime)

    multexprprime  go to state 101


state 94

   40 multexprprime: '/' simpleexpr multexprprime .

    $default  reduce using rule 40 (multexprprime)


state 95

   15 ifstmt: T_if error '(' boolexpr ')' stmt . T_then stmt T_else stmt

    T_then  shift, and go to state 102


state 96

   14 ifstmt: T_if '(' boolexpr ')' stmt T_then . stmt T_else stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 103
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 97

   17 whilestmt: T_while error '(' boolexpr ')' stmt .

    $default  reduce using rule 17 (whilestmt)


state 98

   32 arithexprprime: '+' error simpleexpr multexprprime .
   36 multexpr: simpleexpr multexprprime .

    ')'       reduce using rule 32 (arithexprprime)
    ')'       [reduce using rule 36 (multexpr)]
    '+'       reduce using rule 36 (multexpr)
    '-'       reduce using rule 36 (multexpr)
    $default  reduce using rule 32 (arithexprprime)


state 99

   34 arithexprprime: '-' error simpleexpr multexprprime .
   36 multexpr: simpleexpr multexprprime .

    ')'       reduce using rule 34 (arithexprprime)
    ')'       [reduce using rule 36 (multexpr)]
    '+'       reduce using rule 36 (multexpr)
    '-'       reduce using rule 36 (multexpr)
    $default  reduce using rule 34 (arithexprprime)


state 100

   36 multexpr: simpleexpr multexprprime .
   39 multexprprime: '*' error simpleexpr multexprprime .

    ')'       reduce using rule 36 (multexpr)
    ')'       [reduce using rule 39 (multexprprime)]
    '+'       reduce using rule 36 (multexpr)
    '+'       [reduce using rule 39 (multexprprime)]
    '-'       reduce using rule 36 (multexpr)
    '-'       [reduce using rule 39 (multexprprime)]
    $default  reduce using rule 39 (multexprprime)


state 101

   36 multexpr: simpleexpr multexprprime .
   41 multexprprime: '/' error simpleexpr multexprprime .

    ')'       reduce using rule 36 (multexpr)
    ')'       [reduce using rule 41 (multexprprime)]
    '+'       reduce using rule 36 (multexpr)
    '+'       [reduce using rule 41 (multexprprime)]
    '-'       reduce using rule 36 (multexpr)
    '-'       [reduce using rule 41 (multexprprime)]
    $default  reduce using rule 41 (multexprprime)


state 102

   15 ifstmt: T_if error '(' boolexpr ')' stmt T_then . stmt T_else stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 104
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 103

   14 ifstmt: T_if '(' boolexpr ')' stmt T_then stmt . T_else stmt

    T_else  shift, and go to state 105


state 104

   15 ifstmt: T_if error '(' boolexpr ')' stmt T_then stmt . T_else stmt

    T_else  shift, and go to state 106


state 105

   14 ifstmt: T_if '(' boolexpr ')' stmt T_then stmt T_else . stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 107
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 106

   15 ifstmt: T_if error '(' boolexpr ')' stmt T_then stmt T_else . stmt

    error    shift, and go to state 5
    ID       shift, and go to state 6
    T_if     shift, and go to state 7
    T_while  shift, and go to state 8
    '{'      shift, and go to state 2

    stmt          go to state 108
    compoundstmt  go to state 10
    ifstmt        go to state 12
    whilestmt     go to state 13
    assgstmt      go to state 14


state 107

   14 ifstmt: T_if '(' boolexpr ')' stmt T_then stmt T_else stmt .

    $default  reduce using rule 14 (ifstmt)


state 108

   15 ifstmt: T_if error '(' boolexpr ')' stmt T_then stmt T_else stmt .

    $default  reduce using rule 15 (ifstmt)
